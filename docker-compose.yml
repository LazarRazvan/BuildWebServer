version: "3"
services:
  web:
    image: razvan12/webserver:example
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8888:5000"
    networks:
      - webnet
    volumes:
      - source-content-gcc:/var/run/web/gcc
      - source-content-clang:/var/run/web/clang
    depends_on:
      - "influxdb"
  influxdb:
    image: influxdb
    ports:
      - "8086:8086"
    networks:
      - webnet
    # Always run DB on manager swarm
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
  gcc-builder:
      image: razvan12/gccbuilder:example
      volumes:
        - source-content-gcc:/var/run/poll_src
        - result-content:/var/run/poll_res
      # If server is down, this is useless
      depends_on:
        - "web"
  clang-builder:
    image: razvan12/clangbuilder:example
    volumes:
      - source-content-clang:/var/run/poll_src
      - result-content:/var/run/poll_res
    # If server is down, this is useless
    depends_on:
      - "web"
  parser:
    image: razvan12/parser:example
    volumes:
      - result-content:/var/run/results
    networks:
      - webnet
    depends_on:
      - "gccbuilder"
      - "clangbuilder"
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    # Keep dashboards when stop/remove
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - webnet
    depends_on:
      - "web"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  webnet:
volumes:
  source-content-gcc:
  source-content-clang:
  result-content:
  grafana:
